# Generated by Django 5.2.5 on 2025-08-18 09:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('msisdn', models.CharField(blank=True, max_length=250, null=True, unique=True)),
                ('departments', models.CharField(blank=True, max_length=300, null=True)),
                ('status_from', models.CharField(blank=True, max_length=100, null=True)),
                ('days_in_status', models.PositiveIntegerField(default=0)),
                ('write_offs_date', models.CharField(blank=True, max_length=100, null=True)),
                ('client', models.CharField(blank=True, max_length=300, null=True)),
                ('rate_plan', models.CharField(blank=True, max_length=200, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('subscription_fee', models.IntegerField(default=0)),
                ('account', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('branches', models.CharField(blank=True, max_length=300, null=True)),
                ('status', models.CharField(blank=True, max_length=150, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('status_call', models.CharField(blank=True, choices=[('Дозвонился', 'Дозвонился'), ('Не дозвонился', 'Не дозвонился'), ('Не звонили', 'Не звонили')], max_length=20, null=True)),
                ('call_result', models.CharField(blank=True, choices=[('Ответили на вопрос', 'Ответили на вопрос'), ('Отказ от разговора', 'Отказ от разговора'), ('Другой владелец номера', 'Другой владелец номера'), ('Нет ответа', 'Нет ответа'), ('Аппарат выкл', 'Аппарат выкл'), ('Номер не существует', 'Номер не существует'), ('Дубликат номера', 'Дубликат номера'), ('Статус активный', 'Статус активный')], max_length=32, null=True)),
                ('abonent_answer', models.CharField(blank=True, choices=[('Временно нет потребности в интернете', 'Временно нет потребности в интернете'), ('Финансовые трудности', 'Финансовые трудности'), ('Забыли внести платеж', 'Забыли внести платеж'), ('Высокая стоимость ТП', 'Высокая стоимость ТП'), ('Не устраивает качество сети', 'Не устраивает качество сети'), ('Плохое обслуживание', 'Плохое обслуживание'), ('Переезд', 'Переезд'), ('Смена технологии', 'Смена технологии'), ('Смена провайдера', 'Смена провайдера'), ('Абонент активный', 'Абонент активный'), ('Оплатит в скором времени', 'Оплатит в скором времени')], max_length=255, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('tech', models.CharField(blank=True, choices=[('pon', 'pon'), ('vdsl', 'vdsl'), ('adsl', 'adsl'), ('ethernet', 'ethernet')], max_length=16, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Abonent',
                'verbose_name_plural': 'Abonents',
                'indexes': [models.Index(fields=['msisdn'], name='crm_api_act_msisdn_c7b15d_idx'), models.Index(fields=['phone'], name='crm_api_act_phone_f8cd24_idx'), models.Index(fields=['branches'], name='crm_api_act_branche_beeb0b_idx'), models.Index(fields=['rate_plan'], name='crm_api_act_rate_pl_da50b9_idx'), models.Index(fields=['status'], name='crm_api_act_status_94d251_idx'), models.Index(fields=['status_call'], name='crm_api_act_status__858135_idx'), models.Index(fields=['call_result'], name='crm_api_act_call_re_117da1_idx'), models.Index(fields=['abonent_answer'], name='crm_api_act_abonent_7cacb2_idx'), models.Index(fields=['tech'], name='crm_api_act_tech_1f6879_idx')],
            },
        ),
        migrations.CreateModel(
            name='Suspends',
            fields=[
            ],
            options={
                'verbose_name': 'Suspend',
                'verbose_name_plural': 'Suspends',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('crm_api.actives',),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('operator', 'Operator'), ('admin', 'Administrator')], db_index=True, default='operator', max_length=10)),
                ('fio', models.CharField(blank=True, max_length=300, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'indexes': [models.Index(fields=['username'], name='crm_api_use_usernam_fabe4a_idx'), models.Index(fields=['role'], name='crm_api_use_role_39d6f8_idx'), models.Index(fields=['fio'], name='crm_api_use_fio_0e0615_idx')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
